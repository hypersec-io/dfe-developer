---
# Cloud tools installation (AWS CLI, Helm, Terraform, Vault)
# Note: kubectl moved to k8s.yml

# ============================================================================
# ADD HASHICORP REPOSITORY (for Terraform, Vault)
# ============================================================================

# Ubuntu
- name: Add HashiCorp GPG key (Ubuntu)
  ansible.builtin.get_url:
    url: https://apt.releases.hashicorp.com/gpg
    dest: /usr/share/keyrings/hashicorp-archive-keyring.asc
    mode: '0644'
  when: ansible_distribution == 'Ubuntu'

- name: Add HashiCorp repository (Ubuntu)
  ansible.builtin.apt_repository:
    repo: "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.asc] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
    filename: hashicorp
    state: present
  when: ansible_distribution == 'Ubuntu'

# Fedora - HashiCorp repository
- name: Import HashiCorp GPG key (Fedora)
  ansible.builtin.rpm_key:
    state: present
    key: https://rpm.releases.hashicorp.com/gpg
  when: ansible_distribution == 'Fedora'

- name: Add HashiCorp repository (Fedora)
  ansible.builtin.yum_repository:
    name: hashicorp
    description: HashiCorp Stable
    baseurl: https://rpm.releases.hashicorp.com/fedora/$releasever/$basearch/stable
    enabled: true
    gpgcheck: true
    gpgkey: https://rpm.releases.hashicorp.com/gpg
  when: ansible_distribution == 'Fedora'

# ============================================================================
# INSTALL AWS CLI V2 (system-wide install)
# ============================================================================

# AWS CLI v2 (binary install - no apt repo available)
# Note: AWS CLI installer is a compiled binary, not a bash script
- name: Download AWS CLI v2 installer
  ansible.builtin.get_url:
    url: https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
    dest: /tmp/awscliv2.zip
    mode: '0644'
  when: ansible_distribution in ['Fedora', 'Ubuntu']

- name: Install unzip for AWS CLI
  ansible.builtin.package:
    name: unzip
    state: present
  when: ansible_distribution in ['Fedora', 'Ubuntu']

- name: Unzip AWS CLI installer
  ansible.builtin.unarchive:
    src: /tmp/awscliv2.zip
    dest: /tmp/
    remote_src: true
  when: ansible_distribution in ['Fedora', 'Ubuntu']

- name: Install AWS CLI v2 system-wide
  ansible.builtin.command:
    cmd: /tmp/aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
  args:
    creates: /usr/local/bin/aws
  when: ansible_distribution in ['Fedora', 'Ubuntu']

- name: Remove AWS CLI installer files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - /tmp/awscliv2.zip
    - /tmp/aws
  when: ansible_distribution in ['Fedora', 'Ubuntu']

# Helm - Direct binary install (no script execution for security)
- name: Get latest Helm version from GitHub API
  ansible.builtin.uri:
    url: https://api.github.com/repos/helm/helm/releases/latest
    return_content: true
  register: helm_latest_release
  when: ansible_distribution in ['Fedora', 'Ubuntu']

- name: Set Helm version fact
  ansible.builtin.set_fact:
    helm_version: "{{ helm_latest_release.json.tag_name }}"
  when: ansible_distribution in ['Fedora', 'Ubuntu']

- name: Determine Helm binary architecture
  ansible.builtin.set_fact:
    helm_arch: >-
      {%- if ansible_architecture == 'x86_64' -%}
      linux-amd64
      {%- elif ansible_architecture == 'aarch64' -%}
      linux-arm64
      {%- else -%}
      unsupported
      {%- endif -%}
  when: ansible_distribution in ['Fedora', 'Ubuntu']

- name: Download Helm binary tarball
  ansible.builtin.get_url:
    url: "https://get.helm.sh/helm-{{ helm_version }}-{{ helm_arch }}.tar.gz"
    dest: "/tmp/helm-{{ helm_version }}-{{ helm_arch }}.tar.gz"
    mode: '0644'
  when: ansible_distribution in ['Fedora', 'Ubuntu']

- name: Extract Helm binary
  ansible.builtin.unarchive:
    src: "/tmp/helm-{{ helm_version }}-{{ helm_arch }}.tar.gz"
    dest: /tmp
    remote_src: true
  when: ansible_distribution in ['Fedora', 'Ubuntu']

- name: Install Helm binary
  ansible.builtin.copy:
    src: "/tmp/{{ helm_arch }}/helm"
    dest: /usr/local/bin/helm
    mode: '0755'
    remote_src: true
  when: ansible_distribution in ['Fedora', 'Ubuntu']

- name: Remove Helm installation files
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/helm-{{ helm_version }}-{{ helm_arch }}.tar.gz"
    - "/tmp/{{ helm_arch }}"
  when: ansible_distribution in ['Fedora', 'Ubuntu']

- name: Install Helm Dashboard plugin
  ansible.builtin.command: helm plugin install https://github.com/komodorio/helm-dashboard.git
  become: false
  failed_when: false
  changed_when: false

# Terraform and Vault - Installed from repos configured in repository.yml
- name: Install Terraform and Vault (Ubuntu)
  ansible.builtin.apt:
    name:
      - terraform
      - vault
    state: present
    update_cache: true
  when: ansible_distribution == 'Ubuntu'

- name: Install Terraform and Vault (Fedora)
  ansible.builtin.dnf:
    name:
      - terraform
      - vault
    state: present
  when: ansible_distribution == 'Fedora'
