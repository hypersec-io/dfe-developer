---
# Python development tools installation
# Installs: pyenv, pipx, UV package manager

# Install Python build dependencies
- name: Install Python build dependencies (Fedora)
  ansible.builtin.dnf:
    name:
      - make
      - gcc
      - zlib-devel
      - bzip2-devel
      - readline-devel
      - sqlite-devel
      - openssl-devel
      - tk-devel
      - libffi-devel
      - xz-devel
    state: present
  when: ansible_distribution == 'Fedora'

- name: Install Python build dependencies (Ubuntu)
  ansible.builtin.apt:
    name:
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - curl
      - git
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev
    state: present
  when: ansible_distribution == 'Ubuntu'

# Install pyenv
- name: Check if pyenv is already installed
  ansible.builtin.stat:
    path: "{{ ansible_env.HOME }}/.pyenv"
  register: pyenv_installed
  become: false

- name: Install pyenv via installer
  ansible.builtin.shell: |
    curl https://pyenv.run | bash
  args:
    creates: "{{ ansible_env.HOME }}/.pyenv/bin/pyenv"
  become: false
  when: not pyenv_installed.stat.exists

# Install pipx
- name: Install pipx (Fedora)
  ansible.builtin.dnf:
    name: pipx
    state: present
  when: ansible_distribution == 'Fedora'

- name: Install pipx (Ubuntu)
  ansible.builtin.apt:
    name: pipx
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Install pipx (macOS)
  community.general.homebrew:
    name: pipx
    state: present
  when: ansible_distribution == 'MacOSX'

- name: Ensure pipx binaries are in PATH
  ansible.builtin.command: pipx ensurepath
  become: false
  changed_when: false
  failed_when: false

# Install UV package manager
- name: Download UV installer
  ansible.builtin.get_url:
    url: https://astral.sh/uv/install.sh
    dest: /tmp/uv-install.sh
    mode: '0755'
  become: false

- name: Install UV package manager
  ansible.builtin.shell: /tmp/uv-install.sh
  args:
    creates: "{{ ansible_env.HOME }}/.cargo/bin/uv"
  become: false
  environment:
    CARGO_HOME: "{{ ansible_env.HOME }}/.cargo"

- name: Remove UV installer script
  ansible.builtin.file:
    path: /tmp/uv-install.sh
    state: absent
  become: false
